(declare-fun STDIN_1 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun aux71146 () (_ BitVec 8))(assert (= aux71146 (select STDIN_1 #x00000003)))
(declare-fun aux71147 () (_ BitVec 8))(assert (= aux71147 (select STDIN_1 #x00000002)))
(declare-fun aux71148 () (_ BitVec 8))(assert (= aux71148 (select STDIN_1 #x00000001)))
(declare-fun aux71149 () (_ BitVec 8))(assert (= aux71149 (select STDIN_1 #x00000000)))
(declare-fun aux71150 () (_ BitVec 32))(assert (= aux71150 (concat aux71146 aux71147 aux71148 aux71149)))
(declare-fun aux71151 () (_ BitVec 32))(assert (= aux71151 (bvsub aux71150 #x00000041)))
(declare-fun aux71152 () Bool)(assert (= aux71152 (= aux71151 #x00000000)))
(declare-fun aux71153 () Bool)(assert (= aux71153 (bvult aux71150 #x00000041)))
(declare-fun aux71154 () Bool)(assert (= aux71154 (= aux71153 false)))
(declare-fun aux71155 () Bool)(assert (= aux71155 (= aux71152 false)))
(declare-fun aux71156 () Bool)(assert (= aux71156 (and aux71154 aux71155)))
(declare-fun aux71157 () (_ BitVec 64))(assert (= aux71157 #x0000000000400642))
(declare-fun aux71158 () (_ BitVec 64))(assert (= aux71158 #x0000000000400621))
(declare-fun aux71159 () (_ BitVec 64))(assert (= aux71159 (ite aux71156 aux71157 aux71158)))
(declare-fun aux71160 () (_ BitVec 64))(assert (= aux71160 #x0000000000400642))
(assert (= aux71159 aux71160))
